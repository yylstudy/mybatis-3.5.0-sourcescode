<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--properties 配置文件就是一个配置属性的元素，让我们能在配置文件的上下文中引用他-->

    <!--<properties>-->
        <!--<property name="" value=""/>-->
    <!--</properties>-->

    <!--
    mybatis全局延迟加载配置，mybatis也提供局部延迟加载的配置
    开启延迟加载，也就是当使用到级联查询时，只有当使用到关联的数据时，mybatis才去执行关联的sql
    但是默认mybatis的延迟加载时层级加载，举个例子：Student中有两个需要延迟加载对象
    studentSelfCard和studentLectureList，若是只配置lazyLoadingEnabled，那么
    当加载studentSelfCard时，由于studentLectureList和它属于同一层级，那么studentLectureList也会加载出来
    所以并不是真正的延迟加载，只是层级的延迟加载
    -->
    <settings>
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--当aggressiveLazyLoading为true时，就是使用层级延迟加载，改为false就是按需延迟加载-->
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>
    <!-- 定义数据库信息 默认使用development数据库构建环境-->
    <environments default="development">
        <environment id="development">
            <!-- 采用JDBC事务管理 有三种：
            JDBC：采用JDBC方式管理事务，在独立编码中经常使用
            MANAGED：采用容器方式管理事务，在JNDI数据源常用
            自定义：由使用者自定义数据库事务管理方法，适用于特殊应用
            -->
            <transactionManager type="JDBC"></transactionManager>
            <!--
             type属性是提供我们对数据库连接方式的配置
             1）UNPOOLED，非连接池数据库
             2）POOLED，连接池数据库
             3）JNDI:JNDI数据源
             4）自定义数据源
             -->
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/mybatis"/>
                <property name="username" value="root"/>
                <property name="password" value="root"/>
            </dataSource>
        </environment>
    </environments>
    <!-- 定义映射器 -->
    <mappers>
        <mapper resource="roleMapper.xml"/>
        <!--采用包名扫描-->
        <!--<package name=""/>-->
    </mappers>
</configuration>